<%- include("./Layouts/header", { user: user }) %>

<div class="page-content">
  <div class="container-fluid">
    <div aria-live="polite" aria-atomic="true" class="position-relative">
      <div class="toast-container position-absolute top-0 end-0 p-3" style="z-index: 1055;">
        <% if (messages.success) { %>
        <div class="toast align-items-center text-white bg-success border-0 show" role="alert">
          <div class="d-flex">
            <div class="toast-body">
              <%= messages.success %>
            </div>
            <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"></button>
          </div>
        </div>
        <% } %>

        <% if (messages.error) { %>
        <div class="toast align-items-center text-white bg-danger border-0 show" role="alert">
          <div class="d-flex">
            <div class="toast-body">
              <%= messages.error %>
            </div>
            <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"></button>
          </div>
        </div>
        <% } %>
      </div>
    </div>

    <div class="row">
      <div class="col-12">
        <div class="page-title-box">
          <h4 class="mb-0 fw-semibold">Group Members</h4>
          <ol class="breadcrumb mb-0">
            <li class="breadcrumb-item"><a href="javascript:void(0);">DMS</a></li>
            <li class="breadcrumb-item active">Group</li>
          </ol>
        </div>
      </div>
    </div>
    <div class="row">
      <div class="col-xl-12">
        <div class="card">
          <div class="card-body">
            <div class="d-flex flex-wrap justify-content-between gap-3">
              <div class="search-bar">
                <span><i class="bx bx-search-alt"></i></span>
                <input type="search" class="form-control" id="search" placeholder="Search groups...">
              </div>
              <div class="dropdown">
                <a href="/addCommittee" class="btn btn-sm btn-primary">
                  Add Group
                </a>
              </div>
            </div>
            <div id="searchResults" class="mt-4"></div>
            <div class="table-responsive">
              <table class="table align-middle mb-0 table-hover table-centered" id="groupTable">
                <thead class="bg-light-subtle">
                  <tr>
                    <th>SI NO</th>
                    <th>Group Name</th>
                    <th>Group Leader</th>
                    <th>Group Members</th>
                    <th>Action</th>
                  </tr>
                </thead>
                <tbody>
                  <% groups.forEach((group, index) => { %>
                  <tr class="group-row">
                    <td><%= index + 1 %></td>
                    <td><%= group.groupName %></td>
                    <td><%= group.memberSecretary?.name %></td>
                    <td>
                      <ul class="mb-0">
                        <% group.members.forEach(member => { %>
                        <li><%= member.name %></li>
                        <% }) %>
                      </ul>
                    </td>
                    <td>
                      <div class="d-flex gap-2">
                        <% if (currentUserId && group.memberSecretary && group.memberSecretary._id.toString() === currentUserId.toString()) { %>
                        <!-- Edit button - only visible to group leader -->
                        <a href="/editGroup/<%= group._id %>" class="btn btn-soft-secondary btn-sm">
                          <iconify-icon icon="cuida:edit-outline" class="align-middle fs-18"></iconify-icon>
                        </a>
                        <!-- Delete button - only visible to group leader -->
                        <button onclick="deleteGroup('<%= group._id %>', '<%= group.groupName %>')" class="btn btn-soft-danger btn-sm" type="button">
                          <iconify-icon icon="solar:trash-bin-minimalistic-2-broken" class="align-middle fs-18"></iconify-icon>
                        </button>
                        <% } else { %>
                        <!-- Show disabled buttons or message for non-leaders -->
                        <span class="text-muted small">Only group leader can edit</span>
                        <% } %>
                      </div>
                    </td>
                  </tr>
                  <% }) %>
                  <tr id="noResultsRow" style="display: none;">
                    <td colspan="5" class="text-center">No groups found.</td>
                  </tr>
                </tbody>
              </table>
            </div>
            <div class="card-footer border-top">
              <nav aria-label="Page navigation example">
                <ul class="pagination justify-content-end mb-0">
                  <li class="page-item"><a class="page-link" href="javascript:void(0);">Previous</a></li>
                  <li class="page-item active"><a class="page-link" href="javascript:void(0);">1</a></li>
                  <li class="page-item"><a class="page-link" href="javascript:void(0);">2</a></li>
                  <li class="page-item"><a class="page-link" href="javascript:void(0);">3</a></li>
                  <li class="page-item"><a class="page-link" href="javascript:void(0);">Next</a></li>
                </ul>
              </nav>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
<!-- Search Functionality  -->
  <script>
    document.addEventListener("DOMContentLoaded", function() {
      const searchInput = document.getElementById("search");
      const groupRows = document.querySelectorAll("tbody tr.group-row"); // Target rows with the new class
      const noResultsRow = document.getElementById("noResultsRow");
      const noGroupsMessage = document.getElementById("noGroupsMessage"); // Get the "No groups created" message

      function filterRows() {
        const query = searchInput.value.trim().toLowerCase();
        let anyVisible = false;

        groupRows.forEach(row => {
          const text = row.innerText.toLowerCase();
          if (text.includes(query)) {
            row.style.display = "";
            anyVisible = true;
          } else {
            row.style.display = "none";
          }
        });

        // Show/hide "No matching groups found" row
        if (!anyVisible && query !== "") { // Only show if there's a query and no results
          noResultsRow.style.display = "table-row";
          if (noGroupsMessage) { // Hide "No groups created" if it exists
            noGroupsMessage.style.display = "none";
          }
        } else {
          noResultsRow.style.display = "none";
          if (noGroupsMessage && groupRows.length === 0) { // Show "No groups created" if there are no groups and no search
            noGroupsMessage.style.display = "block";
          } else if (noGroupsMessage) { // Otherwise, hide it
            noGroupsMessage.style.display = "none";
          }
        }

        // If there are no groups initially, hide the table and show the "No groups Created" message
        if (groupRows.length === 0 && query === "") {
          if (noGroupsMessage) {
            noGroupsMessage.style.display = "block";
          }
          document.getElementById("groupTable").style.display = "none"; // Hide the table if no groups
        } else if (groupRows.length > 0 && query === "") {
          document.getElementById("groupTable").style.display = ""; // Show the table if there are groups and no search
          if (noGroupsMessage) {
            noGroupsMessage.style.display = "none";
          }
        }
      }

      searchInput.addEventListener("input", filterRows);
      filterRows(); // Initial call to set correct state
    });
  </script>
  <!-- Function to Delete The group -->
  <script>
    async function deleteGroup(groupId, groupName) {
      // Show confirmation dialog
      const isConfirmed = confirm(`Are you sure you want to delete the group "${groupName}"? This action cannot be undone.`);

      if (!isConfirmed) {
        return;
      }

      // Get the button that was clicked
      const deleteButton = event.target.closest('button');
      const originalContent = deleteButton.innerHTML;

      try {
        // Show loading state
        deleteButton.innerHTML = '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>';
        deleteButton.disabled = true;

        // Send DELETE request
        const response = await fetch(`/deleteGroup/${groupId}`, {
          method: 'DELETE',
          headers: {
            'Content-Type': 'application/json',
          },
        });

        // Check if response is ok
        if (!response.ok) {
          throw new Error(`HTTP error! status: ${response.status}`);
        }

        const result = await response.json();

        if (result.success) {
          // Remove the row from the table
          const groupRow = document.getElementById(`group-${groupId}`);
          if (groupRow) {
            groupRow.remove();
          }

          // Show success message
          alert('Group deleted successfully');

          // Check if table is empty and show "no results" message
          const tbody = document.querySelector('#groupTable tbody');
          const remainingRows = tbody.querySelectorAll('.group-row');
          if (remainingRows.length === 0) {
            document.getElementById('noResultsRow').style.display = 'table-row';
          }

        } else {
          // Show error message and restore button
          alert(result.message || 'Error deleting group');
          restoreButton();
        }

      } catch (error) {
        console.error('Error deleting group:', error);
        alert('Error deleting group. Please try again.');
        restoreButton();
      }

      // Function to restore button state
      function restoreButton() {
        deleteButton.innerHTML = originalContent;
        deleteButton.disabled = false;
      }
    }
  </script>
  <%- include("./Layouts/footer") %>